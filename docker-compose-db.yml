version: '2.1'
services:
  #Message broker container settings (not a spring micro-service)
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - front-end
      - back-end

  #MySql container settings (not a spring micro-service)
  account-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: webscholar-db
      MYSQL_ROOT_PASSWORD: password
      MYSQL_TCP_PORT: 6002
    ports:
      - 6002:6002
    expose:
      - 6002
    #Data persistence for mysql database files
    volumes:
      - "./.data/db:/var/lib/mysql"
    networks:
      - front-end
      - back-end


  scholarship-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: scholarship-db
      MYSQL_ROOT_PASSWORD: password
      MYSQL_TCP_PORT: 6010
    ports:
      - "6010:6010"
    expose:
      - 6010
    # Data persistence
    volumes:
      - "./.data/db:/var/lib/mysql_scholarship_db"
    networks:
      - front-end
      - back-end

  # DB for the scholarship-application-service
  scholarship-application-db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: scholarship-application-db
      MYSQL_ROOT_PASSWORD: password
      MYSQL_TCP_PORT: 6070
    ports:
      - "6070:6070"
    expose:
      - 6070
    # Data persistence
    volumes:
      - "./.data/db:/var/lib/mysql_scholarship_application_db"
    networks:
      - front-end
      - back-end



#Networking settings that splits up containers
#for the backend and frontend
networks:
  front-end:
  back-end:

